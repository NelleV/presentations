Day0 (Mon Sep 8): Best Programming Practices
Best Practices for Scientific Computing
Version control with git and how to contribute to Open Source with github
Object-oriented programming & design patterns
Day1 (Tue Sep 9): Software Carpentry
Test-driven development, unit testing & quality assurance
Debugging, profiling and benchmarking techniques
Advanced Python I: idioms, useful built-in data structures, generators
Day2 (Wed Sep 10): Scientific Tools for Python
Advanced NumPy
The Quest for Speed (intro): Interfacing to C with Cython
Programming in teams
Day3 (Thu Sep 11): The Quest for Speed
Writing parallel applications in Python
Python 3: why should I care
Programming project
Day4 (Fri Sep 12): Efficient Memory Management
When parallelization does not help: the starving CPUs problem
Advanced Python II: decorators and context managers
Programming project
Day5 (Sat Sep 13): Practical Software Development
Programming project
The Pelita Tournament
